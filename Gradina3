#include <fstream>
 
using namespace std;
 
ifstream fin("gradina3.in");
ofstream fout("gradina3.out");
 
#define DM 1001
 
int n,p,k;
pair < int, int > pom;
int gradina[DM + 1][DM + 1];
int sp[DM + 1][DM + 1];
int mx, nmx;
 
int main() {
    fin >> n >> p >> k;
    for(int i = 1; i <= p; i++) {
        fin >> pom.first >> pom.second;
        gradina[pom.first][pom.second] = 1;
    }
    
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= n; j++) {
            sp[i][j] = sp[i - 1][j] + gradina[i][j];
        }
    }
    
    for(int i = 1; i <= n; i++) {
        for(int ii = i; ii <= n; ii++) {
            if(ii - i + 1 == k) {
                int s = 0;
                int jj = 1;
                for(int j = 1; j <= n; j++) {
                    s += sp[ii][j] - sp[i - 1][j];
                    if(j - jj + 1 == k) {
                        if(s > mx) {
                            mx = s;
                            nmx = 1;
                        } else if( s == mx) {
                            nmx++;
                        }
                        s -= sp[ii][jj] - sp[i - 1][jj];
                        jj++;
                    }
                }
            }
        }
    }
    
    fout << mx << '\n' << nmx;
}
